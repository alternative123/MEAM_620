% MEAM 620 Student Hover code

if (setitM(qn)~=901) %The variable setitM(qn) tracks what type of sequence each quad is in. 
                     %If the quad switches sequences, this if statement will be active.
    setitM(qn)=901;  %This changes setitM(qn) to the current sequence type so that this code only runs once.
    
    %PUT ANY INITIALIZATION HERE
    
    
    qd{qn}.pos_des = qd{qn}.pos;
    qd{qn}.vel_des = [0 0 0];
    
    
    %END INTITIALIZATION

end %everything beyond this point runs every control loop iteration

%COMPUTE CONTROL HERE
%command qd{qn}.pos to become qd{qn}.pos_des;


kp1 = [20 20 20];   % proportional control gain 200
kd1 = [5 5 5];   % derivative control gain 50

kp2 = [20 20 20];
kd2 = [0.05 0.05 0.05];

% Hover Control
phi_T = 0;
phi_T_d = 0;
pos = qd{qn}.pos';	% qd{qn}.pos is a 3 by 1 vector.
vel = qd{qn}.vel';

acc_des = kp1 .* (qd{qn}.pos_des - pos) + kd1 .* (qd{qn}.vel_des - vel);  % Hover Control

euler_des(1) = (acc_des(1) * sin(phi_T) - acc_des(2) * cos(phi_T)) / params.grav;
euler_des(2) = (acc_des(1) * cos(phi_T) + acc_des(2) * sin(phi_T)) / params.grav;
euler_des(3) = phi_T;


omega_des(1:2) = 0;
omega_des(3) = phi_T_d;

F = (acc_des(3) * params.mass + params.mass) / 1000;   % u1

M = kp2 .* (euler_des - euler) + kd2 .* (omega_des - omega);  % u2
M = M';

qd{qn}.trpy = [F euler_des'];
qd{qn}.drpy = omega_des';
